<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRemove.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>